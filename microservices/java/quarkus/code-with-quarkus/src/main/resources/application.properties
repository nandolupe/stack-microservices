# Configuration file
# key = value

# datasource configuration

quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.http.port=8080



# use the same name as the application name that was configured when standing up the Config Server
quarkus.application.name=code-with-quarkus
# enable retrieval of configuration from Consul - this is off by default
#quarkus.consul-config.enabled=false
# this is a key in Consul's KV store that the Quarkus application will read and try to extract properties from
#quarkus.consul-config.properties-value-keys=config/code-with-quarkus
#configsource.consul.host=localhost
#configsource.consul.port=8500
#configsource.consul.validity=5
#quarkus.consul-config.agent.host-port=localhost:8500

quarkus.eureka.region=default
## configuration related to reaching the eureka servers
quarkus.eureka.prefer-same-zone=true
#quarkus.eureka.should-use-dns=false
quarkus.eureka.service-url.default=http://eureka-server:8761/eureka

##
## Propridades abaixo eh de um framewok paralelo que foi criado por conta que a stack do Quarkus ate o momento nao da suporte ao Eureka 
## 
# Hostname abaixo esta o da API no docker
quarkus.eureka.host-name=code-with-quarkus
quarkus.eureka.port=${quarkus.http.port}
quarkus.eureka.name=${quarkus.application.name}
quarkus.eureka.home-page-url=/
quarkus.eureka.status-page-url=/info/status
quarkus.eureka.health-check-url=/info/health

